2025年7月~9月1日
✅#学习到C语言的指针
✅#建立了GitHub远程仓库
✅#学习了Git命令行和GitHub桌面传输文件



2025年9月2号 星期二
✅#重新写2月前的练习题
-完成成绩判断

-完成星期查询



2025年9月3号 星期三
✅#练习题
-完成乘法表生成器

-正数字金字塔 --> 倒立金字塔 --> 菱形(自己推导出来的)
💡*收获*掌握了三层循环嵌套,理解外层循环空行,内循环的思想, 并创新出图案反转和合成菱形

-斐波那契数列
💡*收获*变量之间的互换



2025年9月4号 星期四
✅#练习题
-素数的判断

-随机数的生成与游戏化

-数字对调


2025年9月5号 星期五
✅#练习题
-完成数组基础操作
💡使用sizeof计算数组长度, 掌握数组声明, 输入和输出, 可添加输入验证和格式化输出

-完成数组求平均值与求和

-掌握二维数组输入输出
💡使用嵌套循环处理二维数组, 掌握二维数组的声明, 初始化, 遍历 , 为矩阵打基础

-完成动态文字显示效果
💡掌握双指针技巧, 实现动态视觉效果 , 使用Sleep延迟与system("cls")清屏

-掌握二分查找算法
💡😊使用了取半来防止整数溢出, 并实现标准的二分查找;


2025年9月6号 星期六
✅练习题
-X图案的输出
💡先画图,再找规律

-正方形图案的输出

-矩阵转置

 -实现数组合并排序
- 收获: 掌握双指针技巧，实现高效数组合并
- 算法: 时间复杂度O(n+m)，空间复杂度O(n+m)
- 意义: 提前掌握大学数据结构的核心算法

💡 算法核心:
while (i < size1 && j < size2) {
    if (arr1[i] <= arr2[j]) 
        result[k++] = arr1[i++];
    else
        result[k++] = arr2[j++];
}


2025年9月7号 星期日
练习题
-函数加减乘除

-函数判断每月天数


2025年9月9号 星期二
#  扫雷游戏 v2.0

## 技术特色
✅ **完整的边界处理** - 使用条件判断防止数组越界  
✅ **创新的雷数算法** - 通过周围格子ASCII码值计算雷数  
✅ **多文件模块化** - 头文件+多个源文件，结构清晰  
✅ **用户友好界面** - 清晰的游戏提示和显示


2025年9月10号 星期三
-完成阶层运算

-用函数完成阶层运算


2025年9月11号 星期四
-完成函数递归的阶乘运算

-按数字打应顺序(函数递归)

-学会用十进制转化为二进制


2025年9月12号 星期五
#进制
-学会使用二进制转为八进制与十六进制
-二进制转为十进制

#原码,反码,补码

#移动运算符
-左移操作符int b = ( a << 1_)具有*2的效果[ 左移1位, 右补1位0 ]❗注意一定是整数
-右移操作符( 常见的是算术右移 )
--如果是负数,具有除2效果,[右移一位,前面补1 ]; ❗不要移负数位,这是未定义

#位操作符&(按位与), |(按位或), ^(按位异或), ~(按位取反)
- 按位与( a & b ),取两个整数的补数相加,有零取零,无零取1
- 按位或 只要有1则为1,无1则为零
- 按位异或 相同为零,相异为1
- 按位取反 对单个整数进行取反❗必须都是整数

